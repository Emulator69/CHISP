#!/usr/bin/python3
# -*- coding: utf-8 -*-

import sqlite3 as lite
import sys
from lib import cookies, history


if __name__ == '__main__':
    try:
        if len(sys.argv) != 3:
            print('usage:\n  ./chisp <cookies file> <history file>\n')
            sys.exit(1)
    except:
        sys.exit(1)
    
    ## Setup the sql connections
    ck = cookies.Cookies(sys.argv[1])
    ht = history.History(sys.argv[2])

    ## Initial list of secure and unsecure cookies
    goodEncryption = ck.listRows('host_key', 'secure', '1')
    badEncryption = ck.listRows('host_key', 'secure', '0')

    ## Initial list of cookies with and without httponly set
    goodJava = ck.listRows('host_key', 'httponly', '1')
    badJava = ck.listRows('host_key', 'httponly', '0')
    
    ## Create lists and set of cookies, secure and nosecure, where the domains match
    gencMatch = ck.setMixer(badEncryption, goodEncryption)
    bencMatch = ck.setMixer(goodEncryption, badEncryption)
    encSet = gencMatch.union(bencMatch)

    ## Create lists and set of cookies, java and nojava, where the domains match
    gjvMatch = ck.setMixer(badJava, goodJava)
    bjvMatch = ck.setMixer(goodJava, badJava)
    jvSet = gjvMatch.union(bjvMatch)

    ## Obtain final lists of secure and unsecure cookies; sort and clean up
    gencList = ck.dotsetPurge(goodEncryption, encSet)
    bencList = ck.dotsetPurge(badEncryption, encSet)

    ## Obtain final lists of java and nojava cookies; sort and clean up
    gjvList = ck.dotsetPurge(goodJava, jvSet)
    bjvList = ck.dotsetPurge(badJava, jvSet)

    ## Grab urls from the history db
    urlSecure, urlNosecure = ht.listRows()
            
    ## Determine cookie security
    highEnc = urlNosecure.intersection(set(bencList))
    lowEnc = urlSecure.intersection(set(bencList))
    highJava = urlNosecure.intersection(set(bjvList))
    lowJava = urlSecure.intersection(set(bjvList))
    
    ## Notate findings
    with open('highEnc.lst', 'w') as oFile:
        for i in highEnc:
            oFile.write(i + '\n')
    with open('lowEnc.lst', 'w') as oFile:
        for i in lowEnc:
            oFile.write(i + '\n')
    with open('highJava.lst', 'w') as oFile:
        for i in highJava:
            oFile.write(i + '\n')
    with open('lowJava.lst', 'w') as oFile:
        for i in lowJava:
            oFile.write(i + '\n')
    print('\nhighEnc.lst is a list of domains highly suspected to be vulnerable to session hijacking')
    print('lowEnc.lst is a list of domains somewhat suspected to be vulnerable to session hijacking\n')
    print('highJava.lst is a list of domains highly suspected to be vulnerable to Cookie-Based XSS')
    print('lowJava.lst is a list of domains somewhat suspected to be vulnerable to Cookie-Based XSS\n')

    ## Cleanup
    ck.con.close()
    ht.con.close()
