#!/usr/bin/python3
# -*- coding: utf-8 -*-

import sqlite3 as lite
import sys
from lib import cookies, history


if __name__ == '__main__':
    try:
        if len(sys.argv) != 3:
            print('usage:\n  ./chisp <cookies file> <history file>\n')
            sys.exit(1)
    except:
        sys.exit(1)
    
    ## Setup the sql connections
    ck = cookies.Cookies(sys.argv[1])
    ht = history.History(sys.argv[2])

    ## Initial list of unsecure and secure cookies
    ckUnsecured = ck.listRows('host_key', 'secure', '0')
    ckSecured = ck.listRows('host_key', 'secure', '1')
    
    ## Create sets of cookies, secure and unsecure, where the domains match
    ckUmatch = ck.setMixer(ckSecured, ckUnsecured)
    ckSmatch = ck.setMixer(ckUnsecured, ckSecured)
    ck.mSet = ckSmatch.union(ckUmatch)

    ## Obtain final lists of cookies, sorted and cleaned up
    ckUlist = ck.dotsetPurge(ckUnsecured)
    ckSlist = ck.dotsetPurge(ckSecured)
    
    ## Grab urls from the history db
    htUnsecured, htSecured = ht.listRows()
            
    ## Find out if any of the ckUlist is in history
    highSuspected = htSecured.intersection(set(ckUlist))
    lowSuspected = htUnsecured.intersection(set(ckUlist))
    
    ## Notate findings
    with open('highSuspected.lst', 'w') as oFile:
        for i in highSuspected:
            oFile.write(i + '\n')
    with open('lowSuspected.lst', 'w') as oFile:
        for i in lowSuspected:
            oFile.write(i + '\n')
    print('\nhighSuspected.lst is a list of sites highly suspected to be vulnerable to session hijacking')
    print('lowSuspected.lst is a list of sites somewhat suspected to be vulnerable to session hijacking\n')

    ## Cleanup
    ck.con.close()
    ht.con.close()
