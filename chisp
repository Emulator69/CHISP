#!/usr/bin/python3
# -*- coding: utf-8 -*-

import sqlite3 as lite
import sys
from lib import cookies, history


if __name__ == '__main__':
    try:
        if len(sys.argv) != 3:
            print('usage:\n  ./chisp <cookies file> <history file>\n')
            sys.exit(1)
    except:
        sys.exit(1)
    
    ## Setup the sql connections
    ck = cookies.Cookies(sys.argv[1])
    ht = history.History(sys.argv[2])

    ## Initial list of unsecure and secure cookies
    nosecure = ck.listRows('host_key', 'secure', '0')
    secured = ck.listRows('host_key', 'secure', '1')

    ## Initial list of cookies with and without httponly set
    nojava = ck.listRows('host_key', 'httponly', '1')
    java = ck.listRows('host_key', 'httponly', '0')
    
    ## Create sets of cookies, secure and nosecure, where the domains match
    secureMatch = ck.setMixer(nosecure, secured)
    unsecureMatch = ck.setMixer(secured, nosecure)
    ck.mSet = secureMatch.union(unsecureMatch)

    ## Create sets of cookies, java and nojava, where the domains match
    javaMatch = ck.setMixer(nosecure, secured)
    nojavaMatch = ck.setMixer(secured, nosecure)
    ck.mSet = javaMatch.union(nojavaMatch)

    ## Obtain final lists of secure and unsecure cookies; sort and clean up
    secureList = ck.dotsetPurge(secured)
    nosecureList = ck.dotsetPurge(nosecure)

    ## Obtain final lists of java and nojava cookies; sort and clean up
    javaList = ck.dotsetPurge(java)
    nojavaList = ck.dotsetPurge(nojava)

    ## Grab urls from the history db
    urlSecure, urlNosecure = ht.listRows()
            
    ## Determine cookie security
    highCookie = urlNosecure.intersection(set(nosecureList))
    lowCookie = urlSecure.intersection(set(nosecureList))
    highJava = urlNosecure.intersection(set(nojavaList))
    lowJava = urlSecure.intersection(set(nojavaList))
    
    ## Notate findings
    with open('highCookie.lst', 'w') as oFile:
        for i in highCookie:
            oFile.write(i + '\n')
    with open('lowCookie.lst', 'w') as oFile:
        for i in lowCookie:
            oFile.write(i + '\n')
    with open('highJava.lst', 'w') as oFile:
        for i in highJava:
            oFile.write(i + '\n')
    with open('lowJava.lst', 'w') as oFile:
        for i in lowJava:
            oFile.write(i + '\n')
    print('\nhighCookie.lst is a list of sites highly suspected to be vulnerable to session hijacking')
    print('lowCookie.lst is a list of sites somewhat suspected to be vulnerable to session hijacking\n')
    print('highJava.lst is a list of sites highly suspected to be vulnerable to Cookie-Based XSS')
    print('lowJava.lst is a list of sites somewhat suspected to be vulnerable to Cookie-Based XSS\n')

    ## Cleanup
    ck.con.close()
    ht.con.close()
